= content_for :titulo, 'Projetos'

.projetos
  
  .tab-content

    .tab-pane.fade#lista

      .box

        - if @projects.empty?

          .alert.alert-info
            span = mensagem_tabela_vazia

        - else

          table.table.table-responsive.table-hover

            thead

              tr
                th Código
                th Descrição
                th Status
                th Início
                th Entrega
                - if can? :update, Project
                  th
                - if can? :destroy, Project
                  th

            tbody

              - @projects.each do |project|

                tr
                  td = project.id
                  td = link_to project.description, project, data: { modal: true }
                  td = project.project_status.try(:description)
                  td = project.start_date
                  td = project.end_date

                  - if can? :update, Project

                    td align="right"

                      = link_to edit_project_path(project), data: { modal: true }, title:'Editar' do
                        i.fa.fa-pencil

                  - if can? :destroy, Project

                    td align="right"

                      = link_to project, data: { confirm: 'Você tem certeza?' }, method: :delete, title:'Excluir' do
                        i.fa.fa-times


    .tab-pane.fade.in.active#painel

      .row

        // NÃO INICIADOS

        .col-sm-3

          .projetos-titulo-box

            h5.text-center.text-warning Não iniciados

          - if @projetos_nao_iniciados.empty?

            .projeto-box

              h5.text-center Não há projetos não iniciados.

          - else

            - @projetos_nao_iniciados.each do |projeto|

              .projeto-box

                h5.text-center
                  = projeto.description

                hr.divider

                strong Início:
                .pull-right
                  = projeto.start_date
                  
                br

                strong Entrega:
                .pull-right
                  = projeto.end_date

                br
                br

                - if projeto.members.empty?

                  p Não há membros alocados.

                - else

                  strong Membros alocados:
                  
                  br
                  br

                  - projeto.members.each do |membro|

                    strong.text-warning
                      = '[' + MembersProject.where(project_id: projeto.id, member_id: membro.id).first.project_role.description + '] '
                    = membro.member_name

                    br

                  br

                .btn-group.btn-group-sm.btn-group-justified

                  = link_to 'Detalhes', projeto, data: { modal: true }, class:'btn btn-warning'

                  - if can? :edit, Project

                    = link_to edit_project_path(projeto), data: { modal: true }, title:'Editar', class:'btn btn-warning' do
                      i.fa.fa-pencil

                  - if can? :delete, Project

                    = link_to projeto, data: {:confirm => 'Você tem certeza?'}, :method => :delete, title:'Excluir', class:'btn btn-warning' do
                      i.fa.fa-times


        // EM DESENVOLVIMENTO

        .col-sm-3

          .projetos-titulo-box

            h5.text-center.text-primary Em desenvolvimento

          - if @projetos_em_desenvolvimento.empty?

            .projeto-box

              h5.text-center Não há projetos em desenvolvimento.

          - else

            - @projetos_em_desenvolvimento.each do |projeto|

              .projeto-box

                h5.text-center
                  = projeto.description

                hr.divider

                strong Início:
                .pull-right
                  = projeto.start_date
                  
                br

                strong Entrega:
                .pull-right
                  = projeto.end_date

                br
                br

                - if projeto.members.empty?

                  p Não há membros alocados.

                - else

                  strong Membros alocados:

                  br
                  br

                  - projeto.members.each do |membro|

                    strong.text-primary
                      = '[' + MembersProject.where(project_id: projeto.id, member_id: membro.id).first.project_role.description + '] '
                    = membro.member_name

                    br

                  br

                .btn-group.btn-group-sm.btn-group-justified

                  = link_to 'Detalhes', projeto, data: { modal: true }, class:'btn btn-info'

                  - if can? :edit, Project

                    = link_to edit_project_path(projeto), data: { modal: true }, title:'Editar', class:'btn btn-info' do
                      i.fa.fa-pencil

                  - if can? :destroy, Project

                    = link_to projeto, data: {:confirm => 'Você tem certeza?'}, :method => :delete, title:'Excluir', class:'btn btn-info' do
                      i.fa.fa-times
       

        // ATRASADOS  

        .col-sm-3

          .projetos-titulo-box

            h5.text-center.text-danger Atrasados

          - if @projetos_atrasados.empty?

            .projeto-box

              h5.text-center Não há projetos atrasados.

          - else

            - @projetos_atrasados.each do |projeto|

              .projeto-box

                h5.text-center
                  = projeto.description

                hr.divider

                strong Início:
                .pull-right
                  = projeto.start_date
                  
                br

                strong Entrega:
                .pull-right
                  = projeto.end_date

                br
                br

                - if projeto.members.empty?

                  p Não há membros alocados.

                - else

                  strong Membros alocados:
                
                  br
                  br

                  - projeto.members.each do |membro|

                    strong.text-danger
                      = '[' + MembersProject.where(project_id: projeto.id, member_id: membro.id).first.project_role.description + '] '
                    = membro.member_name

                    br

                  br

                .btn-group.btn-group-sm.btn-group-justified

                  = link_to 'Detalhes', projeto, data: { modal: true }, class:'btn btn-danger'

                  - if can? :edit, Project

                    = link_to edit_project_path(projeto), data: { modal: true }, title:'Editar', class:'btn btn-danger' do
                      i.fa.fa-pencil

                  - if can? :destroy, Project

                    = link_to projeto, data: {:confirm => 'Você tem certeza?'}, :method => :delete, title:'Excluir', class:'btn btn-danger' do
                      i.fa.fa-times


        // CONCLUÍDOS

        .col-sm-3
        
          .projetos-titulo-box

            h5.text-center.text-success Concluídos

          - if @projetos_concluidos.empty?

            .projeto-box

              h5.text-center Não há projetos concluídos.

          - else

            - @projetos_concluidos.each do |projeto|

              .projeto-box

                h5.text-center
                  = projeto.description

                hr.divider

                strong Início:
                .pull-right
                  = projeto.start_date
                  
                br

                strong Entrega:
                .pull-right
                  = projeto.end_date

                br
                br

                - if projeto.members.empty?

                  p Não há membros alocados.

                - else

                  strong Membros alocados:
                
                  br
                  br

                  - projeto.members.each do |membro|

                    strong.text-success
                      = '[' + MembersProject.where(project_id: projeto.id, member_id: membro.id).first.project_role.description + '] '
                    = membro.member_name

                    br

                  br

                .btn-group.btn-group-sm.btn-group-justified

                  = link_to 'Detalhes', projeto, data: { modal: true }, class:'btn btn-success'

                  - if can? :edit, Project

                    = link_to edit_project_path(projeto), data: { modal: true }, title:'Editar', class:'btn btn-success' do
                      i.fa.fa-pencil

                  - if can? :destroy, Project
                    
                    = link_to projeto, data: {:confirm => 'Você tem certeza?'}, :method => :delete, title:'Excluir', class:'btn btn-success' do
                      i.fa.fa-times